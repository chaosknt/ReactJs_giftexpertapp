{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.jsx","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","components/GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","undefined","length","cats","type","placeholder","value","onChange","target","getGif","category","a","url","encodeURI","fetch","result","json","data","gifts","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","useEffect","then","imgs","setstate","loading","state","useFetchGifs","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OAEI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,sBACgBC,IAAfL,GAA4BA,EAAWM,OAAS,IAE/CR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SACC,uBACGO,KAAO,OACPC,YAAY,wBACZC,MAAUV,EACVW,SApBkB,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,+BCPlBG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACZC,EADY,iDACqCC,UAAUH,GAD/C,+DAEGI,MAAQF,GAFX,cAEZG,EAFY,gBAGKA,EAAOC,OAHZ,uBAGVC,EAHU,EAGVA,KAGFC,EAAQD,EAAKE,KAAM,SAAAC,GACrB,IAAD,EACK,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAX5B,kBAcXM,GAdW,4CAAH,sDCCNO,EAAc,SAAC,GAAwB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACtC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,SCDLO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAE1BoB,qBAAY,WACRrB,EAAQC,GACCqB,MAAM,SAAAC,GACHC,EAAS,CACLhB,KAAMe,EACNE,SAAS,SAG1B,CAACxB,IAVoC,MAWdf,mBAAS,CAC/BsB,KAAM,GACNiB,SAAS,IAb2B,mBAWjCC,EAXiC,KAW1BF,EAX0B,KAexC,OAAOE,EDJwBC,CAAc1B,GAAjCa,EAVyB,EAU9BN,KAAaiB,EAViB,EAUjBA,QAIpB,OACI,qCACA,6BAAMxB,IACLwB,GAAW,2CACZ,qBAAKR,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAEC,GAAF,OACT,cAAC,EAAD,eAESA,GADGA,EAAIC,aEKpBgB,EA5BM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,cAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAKvB,OACI,qCACA,gDACA,cAAC,EAAD,CACAA,cAAgBA,IAEhB,uBAGA,6BAEQ4C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAaA,GADLA,Y,MChB5B6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.bc6da884.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Proptypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();    \r\n        if(inputValue !== undefined && inputValue.length > 2)\r\n        {        \r\n            setCategories(cats => [inputValue, ...cats]); \r\n            setInputValue('');\r\n        }\r\n           \r\n    }\r\n    return (\r\n\r\n        <form onSubmit ={handleSubmit}>\r\n         <input\r\n            type = 'text'\r\n            placeholder='escriba una categoria'\r\n            value = { inputValue}\r\n            onChange = { handleInputChange }\r\n         />  \r\n         </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: Proptypes.func.isRequired\r\n}","//encodeURI reemplaza los espacios por % y otras cosas\r\nexport const getGif = async( category )=> {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=Bq8P64iBDcqET1jykuMgclqMmvSXCAId`;\r\n    const result = await fetch ( url );\r\n    const { data } = await result.json();\r\n\r\n    \r\n    const gifts = data.map(  img  =>\r\n       {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n    return gifts;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url }) => {\r\n    return (\r\n        <div className='card animate__animated animate__bounce'>\r\n            <img src={ url } alt={ title } />\r\n            <p> { title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n//import { getGif } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    \r\n    /*const [images, setImages] = useState([])\r\n\r\n    useEffect( () =>{\r\n     getGif( category )\r\n        .then ( setImages );   \r\n     //.then( imgs => setImages ( imgs ) ) forma larga de escribir el then\r\n    }, [ category ]);\r\n*/\r\n    const {data:images, loading} = useFetchGifs( category );\r\n    //console.log(state)\r\n    \r\n\r\n    return (\r\n        <>\r\n        <h3>{ category }</h3>\r\n        {loading && <p>Loading...</p>}\r\n        <div className='card-grid'>\r\n            {\r\n                images.map( ( img ) =>(\r\n                   <GifGridItem \r\n                        key = {img.id}\r\n                        {...img} //estoy mandando cada \r\n                                //una de las propiedades de las imagenes como una\r\n                                // propiedad independiente\r\n                   />\r\n                ))\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGif } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    useEffect ( () => {\r\n        getGif( category )\r\n                .then( imgs =>{\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                })\r\n    }, [category]);\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n//60    62\r\nconst GitExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['one punch'])\r\n\r\n  \r\n    return (\r\n        <>\r\n        <h1>GitExpertApaap</h1>\r\n        <AddCategory\r\n        setCategories ={setCategories}\r\n        />\r\n        <hr/>\r\n        \r\n    \r\n        <ol>\r\n            {\r\n                categories.map(category => (\r\n                    <GifGrid \r\n                    key = { category }\r\n                    category = { category } \r\n                    />\r\n                ))\r\n            }\r\n        </ol>\r\n        </>\r\n        );\r\n}\r\n \r\nexport default GitExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GitExpertApp from './components/GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GitExpertApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}